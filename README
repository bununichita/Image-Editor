# Copyright Bunu Nichita-Adrian 313CA 2022-2023

**********LOAD************

Subprogramul "load" are ca scop incarcarea unui fisier specificat de
utilizator prin intermediul parametrului "s" si salvarea informatiilor
din acest fisier in structura "file" specificata prin parametrul "p".
Subprogramul verifica daca a fost incarcat deja un fisier, in caz afirmativ
el elibereaza memoria alocata anterior, apoi deschide fisierul specificat
prin "s" cu "fopen" si preia informatii despre fisier cum ar fi tipul,
latimea, inaltimea si valoarea maxima. In functie de tipul fisierului, 
e aloca si se citesc datele din fisier in matricea din structura "file"
specificata prin parametrul "p". In cazul in care nu se poate deschide
fisierul, se afiseaza un mesaj de eroare.

*********SELECT***********

Subprogramul "selection" are ca scop selectarea unei zone dintr-un fisier 
imagine, specificat prin parametrul "p" si utilizand coordonatele selectiei 
specificate prin parametrul "s". Subprogramul verifica daca numarul de 
spatii din "s" este egal cu 4 si daca nu, afiseaza un mesaj de eroare si 
returneaza 0. 
Apoi, foloseste functia "strtok" si "if_num" pentru a prelua coordonatele si 
verifica daca acestea sunt valide si daca nu, afiseaza un mesaj de eroare si 
returneaza 0. 
In cazul in care coordonatele sunt valide, se afiseaza mesajul 
"Selected x0 y0 x1 y1" si returneaza 0.

******SELECT_ALL********

Subprogramul "select_all" are ca scop selectarea intregii imagini, 
specificata prin parametrul "p". Subprogramul seteaza coordonatele 
selectiei la valorile 0 pentru x0 si y0 si la valoarea latimii si 
inaltimii fisierului pentru x1 si y1 respectiv. Apoi afiseaza mesajul 
"Selected ALL".

*******HISTOGRAM**********

Subprogramul "histogram" are ca scop afisarea unei histograme pentru 
o imagine alb-negru specificata prin parametrul "p" si utilizand coordonatele 
selectiei si dimensiunile histogramei specificate prin parametrul "s". 
Subprogramul verifica daca numarul de spatii din "s" este egal cu 2 si 
daca nu, afiseaza un mesaj de eroare si returneaza 0. Apoi verifica daca 
tipul fisierului este 2 sau 5 si daca nu este afiseaza un mesaj de eroare 
si returneaza 0. Foloseste functia "strtok" pentru a prelua coordonatele 
si verifica daca acestea sunt valide si daca nu, afiseaza un mesaj de eroare 
si returneaza 0.In cazul in care coordonatele sunt valide se calculeaza 
histograma si se afiseaza acesta.

********EQUALIZE**********

Subprogramul "equalize" are ca scop egalizarea nivelurilor de gri ale unei 
imagini alb-negru specificata prin parametrul "p". Subprogramul verifica 
daca tipul fisierului este 2 sau 5 si daca nu este afiseaza un mesaj de 
eroare si returneaza 0. Apoi, se calculeaza frecventa de aparitie a fiecarui 
nivel de gri si se aplica transformarea de egalizare. In final, se afiseaza 
mesajul "Equalize done" si se returneaza 0.

********ROTATE************

"rotate" este un subprogram utilizat pentru a roti o imagine sau o selectie
de imagine. Există două versiuni ale acestui subprogram: "rotate_sel" și 
"rotate_full". "rotate_sel" este utilizat pentru a roti o selectie de imagine 
în timp ce "rotate_full" este utilizat pentru a roti întreaga imagine. Ambele 
subprograme iau ca parametri un pointer către structura file, unghiul de 
rotație, înălțimea și lățimea imaginii.
"rotate_sel" se ocupă de rotirea selectiei de imagine în funcție de tipul de 
imagine (alb-negru sau culoare). Se foloseste o matrice intermediara pentru a 
salva valorile selectiei, aceasta matrice este rotita si apoi valorile sunt 
copiate inapoi in matricea originala.
"rotate_full" se ocupa de rotirea întregii imagini. Se foloseste o matrice 
intermediara pentru a salva valorile imaginii, aceasta matrice este rotita 
si apoi valorile sunt copiate inapoi in matricea originala si se actualizeaza 
dimensiunile imaginii.
In ambele cazuri se roteste selectia sau imaginea cu unghiul specificat.

*********CROP*************

Acest subprogram realizeaza taierea unei imagini. In primul rand, se 
determina dimensiunile selectiei. Daca selectia este de dimensiunile 
intregii imagini, afiseaza un mesaj si returneaza 0, pentru eficienta. 
Apoi, se verifica tipul imaginii (grayscale sau color) si se aloca memorie 
pentru o matrice temporara in care se copiaza pixelii selectiei. Apoi, se 
elibereaza memoria matricei originale si se atribuie matricea temporara ca 
fiind matricea imaginii. In final, se actualizeaza dimensiunile imaginii, se 
reseteaza selectia si se afiseaza un mesaj de confirmare.

*********APPLY************

AcestE subprograme verifica daca valoarea "p->type" este 2 sau 5, iar dacă 
este afișează "Easy, Charlie Chaplin" și returnează 0. Dacă nu, se salvează 
valorile x0, y0, x1 și y1 din "p->sel" și se verifică dacă acestea sunt egale 
cu 0, în acest caz se adaugă 1 la valoarea respectivă. Apoi se verifică dacă 
valoarea "p->height" sau "p->width" este egală cu y1 sau x1, respectiv, și 
dacă este, se scade 1 din valoarea respectivă. Se declară o matrice "matrix" 
și se alocă memorie pentru aceasta, apoi se parcurge matricea "p->m.c_mat" 
și se calculează suma pentru fiecare pixel, în funcție de poziția sa în 
matrice, și se aplică o operație "clamp" pentru a limita valoarea pixelului 
la un anumit interval. Rezultatul este salvat în matricea "matrix".

*********SAVE*************

Acest subprogram salvează un fișier imagine în format binar sau text, în 
funcție de numărul de cuvinte din comanda dată. Primește ca parametru un 
pointer la structura "file" care conține informații despre imagine și un 
șir de caractere "s" care conține comanda de salvare. Se copiază numele 
fișierului într-o variabilă "filename" și se calculează numărul de cuvinte 
din comandă. Dacă numărul de cuvinte este 2, atunci se deschide un fișier 
binar cu numele "filename" și se scriu informațiile necesare pentru a 
deschide imaginea în format binar (P5 sau P6, dimensiunile, valoarea maximă). 
Apoi, se parcurge matricea de pixeli și se scriu în fișier, dacă este un 
fișier alb-negru se scrie direct valoarea pixelului, dacă este color se scrie 
valoarea R, G, B pentru fiecare pixel. Dacă numărul de cuvinte este 3, se 
deschide un fișier text cu numele "filename" și se scriu aceleași informații 
ca mai sus, dar în loc să se scrie direct valoarea pixelului se scrie 
valoarea în format text.

*********MAIN*************

Aceasta este funția principală a programului, care se buclează până când se 
introduce comanda "EXIT". Se alocă memorie pentru structura "file" și se 
declară variabilele necesare, cum ar fi "angle", "loaded" și "fin". Apoi, 
se citesc comenzi de la tastatură și se compara cu diferite valori pentru a 
determina ce acțiune să se execute. Dacă comanda este "LOAD", se apelează 
funcția "load" pentru a încărca o imagine. Dacă comanda este "SAVE", se 
apelează funcția "save" pentru a salva imaginea în format binar sau text. 
Dacă comanda este "EXIT", se eliberează memoria alocată pentru structură și 
se iese din bucla while. Dacă comanda este invalidă, se afișează mesajul 
corespunzător.

EFICIENTA:

In primul rand, uniunea matrix imbunatateste eficienta spatiala, si este si
un concept nou pe care voiam sa il descopar si sa capat experienta cu el.

Din punctul meu de vedere, structura completa este destul de explicita si
usor de inteles.

In functia "selection", in loc de a crea copia unei metrice selectie, 
am stocat doar coordonatele.

La toate functiile de rotate, in cazul in care unghiul de rotatie este 360
sau -360, acestea nu fac nicio schimbare (eficienta temporala).

In opinia mea, programul este destul de bine structurat, cu nume de variabile
si functii destul de explicite.

******************************************************************************

per total o tema care mi-a placut, desi nu am avut vacanta din cauza ei, dar
sentimentul pe care l-am avut cand am vazut 110 la final este inegalabil

******************************************************************************
